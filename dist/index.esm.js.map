{"version":3,"file":"index.esm.js","sources":["../src/components/PrizeWheel.jsx","../src/components/WheelControls.jsx","../src/components/ColorPicker.jsx","../src/utils/defaultColors.js","../src/components/PrizeList.jsx","../src/components/AdminPanel.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\n\r\n/**\r\n * A customizable prize wheel component\r\n *\r\n * @param {Object} props\r\n * @param {Array} props.prizes - Array of prize objects with option and color properties\r\n * @param {string} props.fontColor - Text color for the prizes\r\n * @param {Function} props.onFinished - Callback when spinning is complete\r\n * @param {Object} props.wheelConfig - Additional configuration for the wheel\r\n * @returns {JSX.Element}\r\n */\r\nexport default function PrizeWheel({\r\n  prizes = [],\r\n  fontColor = \"#ffffff\",\r\n  onFinished = () => {},\r\n  wheelConfig = {},\r\n}) {\r\n  const [mustSpin, setMustSpin] = useState(false);\r\n  const [prizeNumber, setPrizeNumber] = useState(0);\r\n  const [result, setResult] = useState(null);\r\n\r\n  // Handle config defaults\r\n  const config = {\r\n    spinDuration: 1.0,\r\n    backgroundColors: [],\r\n    textDistance: 60,\r\n    fontSize: 16,\r\n    ...wheelConfig,\r\n  };\r\n\r\n  const handleSpinClick = useCallback(() => {\r\n    if (prizes.length === 0) return;\r\n\r\n    const index = Math.floor(Math.random() * prizes.length);\r\n    setPrizeNumber(index);\r\n    setMustSpin(true);\r\n    setResult(null);\r\n  }, [prizes]);\r\n\r\n  const handleStopSpinning = useCallback(() => {\r\n    setMustSpin(false);\r\n    const winningPrize = prizes[prizeNumber];\r\n    setResult(winningPrize);\r\n\r\n    if (onFinished) {\r\n      onFinished(winningPrize, prizeNumber);\r\n    }\r\n  }, [prizes, prizeNumber, onFinished]);\r\n\r\n  // Prepare data for the wheel\r\n  const wheelData = prizes.map((prize) => ({\r\n    option: prize.option,\r\n    style: {\r\n      backgroundColor: prize.color,\r\n      textColor: fontColor || \"#ffffff\",\r\n    },\r\n  }));\r\n\r\n  // Don't render if no prizes\r\n  if (prizes.length === 0) {\r\n    return <div>Add prizes to display the wheel</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"prize-wheel-container\">\r\n      <Wheel\r\n        mustStartSpinning={mustSpin}\r\n        prizeNumber={prizeNumber}\r\n        data={wheelData}\r\n        onStopSpinning={handleStopSpinning}\r\n        spinDuration={config.spinDuration}\r\n        backgroundColors={config.backgroundColors}\r\n        textDistance={config.textDistance}\r\n        fontSize={config.fontSize}\r\n        radiusLineWidth={config.radiusLineWidth || 1}\r\n        pointerProps={config.pointerProps}\r\n        innerRadius={config.innerRadius}\r\n        innerBorderColor={config.innerBorderColor}\r\n        innerBorderWidth={config.innerBorderWidth}\r\n        outerBorderColor={config.outerBorderColor}\r\n        outerBorderWidth={config.outerBorderWidth}\r\n      />\r\n\r\n      {result && !mustSpin && (\r\n        <div className=\"prize-wheel-result\">\r\n          <p>You won: {result.option}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n/**\r\n * Controls for the prize wheel\r\n *\r\n * @param {Object} props\r\n * @param {Function} props.onSpin - Callback when spin button is clicked\r\n * @param {boolean} props.isSpinning - Whether the wheel is currently spinning\r\n * @param {Object} props.buttonStyle - Custom styles for the spin button\r\n * @param {Object} props.result - Current result object if available\r\n * @returns {JSX.Element}\r\n */\r\nexport default function WheelControls({\r\n  onSpin,\r\n  isSpinning = false,\r\n  buttonStyle = {},\r\n  result = null,\r\n}) {\r\n  return (\r\n    <div className=\"wheel-controls\">\r\n      <button\r\n        onClick={onSpin}\r\n        disabled={isSpinning}\r\n        style={{\r\n          padding: \"10px 20px\",\r\n          fontSize: \"16px\",\r\n          fontWeight: \"bold\",\r\n          borderRadius: \"5px\",\r\n          backgroundColor: isSpinning ? \"#ccc\" : \"#4CAF50\",\r\n          color: \"#fff\",\r\n          border: \"none\",\r\n          cursor: isSpinning ? \"not-allowed\" : \"pointer\",\r\n          transition: \"background-color 0.3s\",\r\n          ...buttonStyle,\r\n        }}\r\n      >\r\n        {isSpinning ? \"Spinning...\" : \"Spin\"}\r\n      </button>\r\n\r\n      {result && !isSpinning && (\r\n        <div\r\n          className=\"wheel-result\"\r\n          style={{\r\n            marginTop: \"15px\",\r\n            padding: \"10px\",\r\n            border: `2px solid ${result.color || \"#ccc\"}`,\r\n            borderRadius: \"5px\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <p style={{ margin: 0, fontWeight: \"bold\" }}>\r\n            You won: {result.option}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n/**\r\n * A simple and flexible color picker component\r\n *\r\n * @param {Object} props\r\n * @param {string} props.color - The current color value (hex)\r\n * @param {Function} props.onChange - Callback when color changes\r\n * @param {Object} props.pickerComponent - Optional custom color picker component\r\n * @param {Object} props.style - Additional styles for the color swatch\r\n * @returns {JSX.Element}\r\n */\r\nexport default function ColorPicker({\r\n  color,\r\n  onChange,\r\n  pickerComponent: PickerComponent = null,\r\n  style = {},\r\n}) {\r\n  const [showPicker, setShowPicker] = useState(false);\r\n\r\n  const handleClose = (e) => {\r\n    if (e.target !== e.currentTarget) return;\r\n    setShowPicker(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div\r\n        onClick={() => setShowPicker(!showPicker)}\r\n        style={{\r\n          backgroundColor: color,\r\n          width: 30,\r\n          height: 30,\r\n          cursor: \"pointer\",\r\n          border: \"1px solid #ccc\",\r\n          borderRadius: \"3px\",\r\n          ...style,\r\n        }}\r\n        aria-label=\"Select color\"\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      />\r\n\r\n      {showPicker && (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 10,\r\n            background: \"rgba(0,0,0,0.3)\",\r\n            padding: \"10px\",\r\n            borderRadius: \"4px\",\r\n          }}\r\n          onClick={handleClose}\r\n        >\r\n          {PickerComponent ? (\r\n            <PickerComponent\r\n              color={color}\r\n              onChange={(c) => {\r\n                // Handle various color picker return formats\r\n                const newColor = typeof c === \"string\" ? c : c.hex || c;\r\n                onChange(newColor);\r\n              }}\r\n            />\r\n          ) : (\r\n            <input\r\n              type=\"color\"\r\n              value={color}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              style={{ width: \"100px\", height: \"30px\" }}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Default color palette for the prize wheel\r\n * These colors are designed to be visually distinct and accessible\r\n */\r\nexport const defaultColors = [\r\n  \"#ff8f43\", // Orange\r\n  \"#70bbe0\", // Light Blue\r\n  \"#0b3351\", // Dark Blue\r\n  \"#f9dd50\", // Yellow\r\n  \"#e74c3c\", // Red\r\n  \"#3498db\", // Blue\r\n  \"#2ecc71\", // Green\r\n  \"#f1c40f\", // Gold\r\n  \"#9b59b6\", // Purple\r\n  \"#1abc9c\", // Teal\r\n  \"#e67e22\", // Dark Orange\r\n  \"#34495e\", // Navy\r\n];\r\n","import React, { useState } from \"react\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport { defaultColors } from \"../utils/defaultColors\";\r\n\r\n/**\r\n * Component for managing prize list\r\n *\r\n * @param {Object} props\r\n * @param {Array} props.prizes - Array of prize objects\r\n * @param {Function} props.onChange - Callback when prizes change\r\n * @param {Object} props.colorPickerComponent - Optional custom color picker component\r\n * @returns {JSX.Element}\r\n */\r\nexport default function PrizeList({\r\n  prizes = [],\r\n  onChange,\r\n  colorPickerComponent = null,\r\n}) {\r\n  const [newPrize, setNewPrize] = useState(\"\");\r\n\r\n  const handleAddPrize = () => {\r\n    if (newPrize.trim()) {\r\n      const color = defaultColors[prizes.length % defaultColors.length];\r\n      onChange([...prizes, { option: newPrize.trim(), color }]);\r\n      setNewPrize(\"\");\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (index, color) => {\r\n    const updated = [...prizes];\r\n    updated[index].color = color;\r\n    onChange(updated);\r\n  };\r\n\r\n  const handleTextChange = (index, text) => {\r\n    const updated = [...prizes];\r\n    updated[index].option = text;\r\n    onChange(updated);\r\n  };\r\n\r\n  const handleRemove = (index) => {\r\n    const updated = prizes.filter((_, i) => i !== index);\r\n    onChange(updated);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleAddPrize();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"prize-list\">\r\n      <div\r\n        className=\"prize-add-form\"\r\n        style={{\r\n          display: \"flex\",\r\n          marginBottom: \"15px\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter prize\"\r\n          value={newPrize}\r\n          onChange={(e) => setNewPrize(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          style={{\r\n            flex: 1,\r\n            padding: \"8px\",\r\n            borderRadius: \"4px\",\r\n            border: \"1px solid #ccc\",\r\n            marginRight: \"10px\",\r\n          }}\r\n        />\r\n        <button\r\n          onClick={handleAddPrize}\r\n          style={{\r\n            padding: \"8px 15px\",\r\n            backgroundColor: \"#4CAF50\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n\r\n      <ul\r\n        style={{\r\n          listStyle: \"none\",\r\n          padding: 0,\r\n          margin: 0,\r\n        }}\r\n      >\r\n        {prizes.map((prize, index) => (\r\n          <li\r\n            key={index}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"8px 0\",\r\n              borderBottom: \"1px solid #eee\",\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              value={prize.option}\r\n              onChange={(e) => handleTextChange(index, e.target.value)}\r\n              style={{\r\n                flex: 1,\r\n                padding: \"6px\",\r\n                marginRight: \"10px\",\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: \"3px\",\r\n              }}\r\n            />\r\n            <ColorPicker\r\n              color={prize.color}\r\n              onChange={(c) => handleColorChange(index, c)}\r\n              pickerComponent={colorPickerComponent}\r\n              style={{ marginRight: \"10px\" }}\r\n            />\r\n            <button\r\n              onClick={() => handleRemove(index)}\r\n              style={{\r\n                padding: \"3px 8px\",\r\n                backgroundColor: \"#f44336\",\r\n                color: \"white\",\r\n                border: \"none\",\r\n                borderRadius: \"3px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              ✕\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport PrizeList from \"./PrizeList\";\r\nimport PrizeWheel from \"./PrizeWheel\";\r\nimport WheelControls from \"./WheelControls\";\r\n\r\nexport default function AdminPanel({\r\n  initialPrizes = [],\r\n  initialFontColor = \"#ffffff\",\r\n  onSave = null,\r\n  colorPickerComponent = null,\r\n  wheelConfig = {},\r\n}) {\r\n  const [prizes, setPrizes] = useState(initialPrizes);\r\n  const [fontColor, setFontColor] = useState(initialFontColor);\r\n  const [isSpinning, setIsSpinning] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n\r\n  const handleSave = () => {\r\n    if (onSave) {\r\n      onSave({ prizes, fontColor });\r\n    }\r\n  };\r\n\r\n  const handleSpin = () => {\r\n    setIsSpinning(true);\r\n    setResult(null);\r\n  };\r\n\r\n  const handleSpinFinished = (prize) => {\r\n    setIsSpinning(false);\r\n    setResult(prize);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-md p-6 space-y-6\">\r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-2xl font-bold text-blue-700\">\r\n          🎛️ Prize Wheel Configuration\r\n        </h2>\r\n        <p className=\"text-gray-500 text-sm\">\r\n          Set prizes, colors, and preview the wheel\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col md:flex-row gap-8\">\r\n        {/* Left Panel: Settings */}\r\n        <div className=\"flex-1 space-y-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Font Color\r\n            </label>\r\n            <div className=\"flex items-center gap-4\">\r\n              <ColorPicker\r\n                color={fontColor}\r\n                onChange={setFontColor}\r\n                pickerComponent={colorPickerComponent}\r\n              />\r\n              <span\r\n                className=\"px-3 py-1 rounded text-sm\"\r\n                style={{ backgroundColor: fontColor, color: \"#fff\" }}\r\n              >\r\n                Aa Preview\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">\r\n              🎁 Prize List\r\n            </h3>\r\n            <PrizeList\r\n              prizes={prizes}\r\n              onChange={setPrizes}\r\n              colorPickerComponent={colorPickerComponent}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex gap-4\">\r\n            <button\r\n              onClick={handleSave}\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\"\r\n            >\r\n              💾 Save Settings\r\n            </button>\r\n            <button\r\n              onClick={() => setShowPreview(!showPreview)}\r\n              className=\"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700 transition\"\r\n            >\r\n              {showPreview ? \"🙈 Hide Preview\" : \"👀 Show Preview\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Panel: Preview */}\r\n        {showPreview && (\r\n          <div className=\"flex-1 flex flex-col items-center space-y-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-700\">\r\n              🎡 Wheel Preview\r\n            </h3>\r\n            <div className=\"w-full max-w-sm\">\r\n              <PrizeWheel\r\n                prizes={prizes}\r\n                fontColor={fontColor}\r\n                onFinished={handleSpinFinished}\r\n                wheelConfig={wheelConfig}\r\n              />\r\n              <div className=\"mt-4 text-center\">\r\n                <WheelControls\r\n                  onSpin={handleSpin}\r\n                  isSpinning={isSpinning}\r\n                  result={result}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["PrizeWheel","_ref","_ref$prizes","prizes","_ref$fontColor","fontColor","_ref$onFinished","onFinished","_ref$wheelConfig","wheelConfig","_useState2","_slicedToArray","useState","mustSpin","setMustSpin","_useState4","prizeNumber","setPrizeNumber","_useState6","result","setResult","config","_objectSpread","spinDuration","backgroundColors","textDistance","fontSize","useCallback","length","index","Math","floor","random","handleStopSpinning","winningPrize","wheelData","map","prize","option","style","backgroundColor","color","textColor","React","createElement","className","Wheel","mustStartSpinning","data","onStopSpinning","radiusLineWidth","pointerProps","innerRadius","innerBorderColor","innerBorderWidth","outerBorderColor","outerBorderWidth","WheelControls","onSpin","_ref$isSpinning","isSpinning","_ref$buttonStyle","buttonStyle","_ref$result","onClick","disabled","padding","fontWeight","borderRadius","border","cursor","transition","marginTop","concat","textAlign","margin","ColorPicker","onChange","_ref$pickerComponent","pickerComponent","PickerComponent","_ref$style","showPicker","setShowPicker","position","width","height","role","tabIndex","zIndex","background","e","target","currentTarget","c","newColor","hex","type","value","defaultColors","PrizeList","_ref$colorPickerCompo","colorPickerComponent","newPrize","setNewPrize","handleAddPrize","trim","_toConsumableArray","handleColorChange","updated","handleTextChange","text","display","marginBottom","placeholder","onKeyDown","key","flex","marginRight","listStyle","alignItems","borderBottom","filter","_","i","handleRemove","AdminPanel","_ref$initialPrizes","initialPrizes","_ref$initialFontColor","initialFontColor","_ref$onSave","onSave","setPrizes","setFontColor","setIsSpinning","_useState8","_useState0","showPreview","setShowPreview"],"mappings":"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"}